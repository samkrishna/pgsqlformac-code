#!/bin/sh
echo ...running preflight

# first let's make sure the the postgres user does
# not currently exist

# Leopard/Tiger - this no longer works on Panther

echo Checking for Postgres group...
PG_GID=`/usr/bin/dscl . read /groups/postgres PrimaryGroupID | grep "PrimaryGroupID:.[0-9]" | sed 's/.*: //' | sed 's/ //'`
if test $PG_GID; then
	echo ...found Postgres with GID of $PG_GID
else
	echo ...Postgres group not found
		
	# loop through the '400's' until we find an available gid
	X=401
	until test $PG_GID; do
		TEST_GID=`/usr/bin/dscl . search /groups PrimaryGroupID $X | grep $X `
		
		if test $TEST_GID; then
			echo ...Group ID $X is not available
		else
			echo ...Group ID $X is available, 
			PG_GID=$X
		fi
		X=`expr $X + 1`
	done
	
	sudo /usr/bin/dscl . -create /groups/postgres PrimaryGroupID $PG_GID
	echo ...Group postgres created with GID $PG_GID
fi

echo Checking for Postgres user...
PG_UID_NOT_FOUND=0
PG_UID=`/usr/bin/dscl . -read /users/postgres | grep "^UniqueID:.[0-9]" | sed 's/.*: //' | sed 's/ //'`
if test $PG_UID; then
	echo ...found user postgres with UID of $PG_UID
else
	echo ...user postgres not found
	PG_UID_NOT_FOUND=1

	# loop through the '400's' until we find an available gid
	X=401
	until test $PG_UID; do
		TEST_UID=`/usr/bin/dscl . -search /users UniqueID $X | grep $X `
		
		if test $TEST_UID; then
			echo ...Unique ID $X is not available
		else
			echo ...Unique ID $X is available, 
			PG_UID=$X
		fi
		X=`expr $X + 1`
	done
	
	sudo /usr/bin/dscl . -create /users/postgres UniqueID $PG_UID
	sudo /usr/bin/dscl . -append /users/postgres PrimaryGroupID $PG_GID
	sudo /usr/bin/dscl . -append /users/postgres UserShell /bin/bash
	sudo /usr/bin/dscl . -append /users/postgres RealName "PostgreSQL Server"
#	sudo /usr/bin/dscl . -append /users/postgres NFSHomeDirectory /var/empty
	sudo /usr/bin/dscl . -append /users/postgres NFSHomeDirectory /Library/PostgreSQL8
	
	echo ...User postgres created with UID $PG_UID
fi
	
echo completed preflight 



